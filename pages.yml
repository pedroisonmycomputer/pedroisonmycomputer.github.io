# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
    
    
name: Convert Word to Markdown and organize posts

on:
  push:
    paths:
      - "scripts/*.docx"

jobs:
  convert:
    runs-on: ubuntu-latest

    steps:
      - name: Convert .docx to Markdown with folders
        run: |
          for file in scripts/*.docx; do
            filename=$(basename "$file" .docx)
            # Pega a data do commit ou usa a data atual
            year=$(date +%Y)
            month=$(date +%m)
            day=$(date +%d)
            # Cria pasta _posts/AAAA/MM/DD se nÃ£o existir
            mkdir -p "_posts/$year/$month/$day"
            # Converte para Markdown e cria front matter
            echo "---" > "_posts/$year/$month/$day/$filename.md"
            echo "layout: post" >> "_posts/$year/$month/$day/$filename.md"
            echo "title: \"$filename\"" >> "_posts/$year/$month/$day/$filename.md"
            echo "date: $(date +%Y-%m-%dT%H:%M:%S%z)" >> "_posts/$year/$month/$day/$filename.md"
            echo "categories: [blog]" >> "_posts/$year/$month/$day/$filename.md"
            echo "---" >> "_posts/$year/$month/$day/$filename.md"
            pandoc "$file" -f docx -t markdown >> "_posts/$year/$month/$day/$filename.md"
          done

      - name: Commit converted files
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add _posts/
          git commit -m "Convert Word posts to Markdown and organize folders"
          git push
